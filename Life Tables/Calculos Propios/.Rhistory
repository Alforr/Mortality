left_join(df_hombre_02, by = "Edad") %>%
replace_na(list(Cantidad = 0)) %>%
arrange(Edad)
}
View(df_mujer_02)
View(df_mujer_02)
View(df_hombre_02)
df_mujer_02$esc_bajo <- rowSums(df_mujer_02[,2:5])
df_mujer_02$esc_medio <- rowSums(df_mujer_02[,6:12])
df_mujer_02$esc_alto <- rowSums(df_mujer_02[,13:16])
df_hombre_02$esc_bajo <- rowSums(df_hombre_02[,2:5])
df_hombre_02$esc_medio <- rowSums(df_hombre_02[,6:12])
df_hombre_02$esc_alto <- rowSums(df_hombre_02[,13:16])
df_totales_02 <- df_hombre_02 %>%
inner_join(df_mujer_02, by = "Edad", suffix = c("_hombre","_mujer")) %>%
mutate(esc_bajo = esc_bajo_hombre + esc_bajo_mujer, esc_medio = esc_medio_hombre + esc_medio_mujer, esc_alto = esc_alto_hombre + esc_alto_mujer) %>%
select(Edad, esc_bajo,esc_medio, esc_alto) %>%
arrange(Edad)
df_hombre_02 <- df_hombre_02 %>%
select(-c(2:17))
df_mujer_02 <- df_mujer_02 %>%
select(-c(2:17))
View(df_mujer_02)
View(df_hombre_02)
tabla_02_hombre <- defs %>% #Promedio tres años alrrededor del año censal
filter(Ano_fa %in% c(2001, 2002,2003), Sexo == 1) %>%
group_by(Edad, tramo_esc) %>%
summarise(Count = round(n() / 3), .groups = 'drop') %>%
pivot_wider(names_from = tramo_esc, values_from = Count, values_fill = list(Count = 0))
tabla_02_mujer <- defs %>% #Promedio tres años alrrededor del año censal
filter(Ano_fa %in% c(2001, 2002,2003), Sexo == 2) %>%
group_by(Edad, tramo_esc) %>%
summarise(Count = round(n() / 3), .groups = 'drop') %>%
pivot_wider(names_from = tramo_esc, values_from = Count, values_fill = list(Count = 0))
tabla_02_hombre <- process_life_table(tabla_02_hombre, df_hombre_02)
tabla_02_hombre <- process_life_table(tabla_02_hombre, df_hombre_02)
tabla_02_hombre <- process_life_table(tabla_02_hombre, df_hombre_02)
View(df_hombre_02)
View(df_hombre_17)
View(df_hombre_92)
View(df_hombre_02)
df_hombre_02$year <- 2002
df_mujer_02$year <- 2002
df_totales_02$year <- 2002
tabla_02_hombre <- defs %>% #Promedio tres años alrrededor del año censal
filter(Ano_fa %in% c(2001, 2002,2003), Sexo == 1) %>%
group_by(Edad, tramo_esc) %>%
summarise(Count = round(n() / 3), .groups = 'drop') %>%
pivot_wider(names_from = tramo_esc, values_from = Count, values_fill = list(Count = 0))
tabla_02_mujer <- defs %>% #Promedio tres años alrrededor del año censal
filter(Ano_fa %in% c(2001, 2002,2003), Sexo == 2) %>%
group_by(Edad, tramo_esc) %>%
summarise(Count = round(n() / 3), .groups = 'drop') %>%
pivot_wider(names_from = tramo_esc, values_from = Count, values_fill = list(Count = 0))
tabla_02_hombre <- process_life_table(tabla_02_hombre, df_hombre_02)
TV_02_H_t <- create_life_table(tabla_02_hombre, rate_col = "mx_st_3", start_age = 25, end_age = 99, fn = 0.5)
TV_02_H_a <- create_life_table(tabla_02_hombre, rate_col = "mx_alto_3", start_age = 25, end_age = 99, fn = 0.5)
TV_02_H_m <- create_life_table(tabla_02_hombre, rate_col = "mx_medio_3", start_age = 25, end_age = 99, fn = 0.5)
TV_02_H_b <- create_life_table(tabla_02_hombre, rate_col = "mx_bajo_3", start_age = 25, end_age = 99, fn = 0.5)
tabla_02_mujer <- process_life_table(tabla_02_mujer, df_mujer_02)
TV_02_M_t <- create_life_table(tabla_02_mujer, rate_col = "mx_st_3", start_age = 25, end_age = 99, fn = 0.5)
TV_02_M_a <- create_life_table(tabla_02_mujer, rate_col = "mx_alto_3", start_age = 25, end_age = 99, fn = 0.5)
TV_02_M_m <- create_life_table(tabla_02_mujer, rate_col = "mx_medio_3", start_age = 25, end_age = 99, fn = 0.5)
TV_02_M_b <- create_life_table(tabla_02_mujer, rate_col = "mx_bajo_3", start_age = 25, end_age = 99, fn = 0.5)
View(TV_02_H_t)
View(TV_02_M_a)
View(TV_02_M_b)
View(TV_02_M_m)
View(TV_02_H_a)
View(TV_02_H_b)
View(TV_02_H_m)
View(TV_02_H_a)
View(TV_02_H_b)
View(TV_02_H_m)
View(TV_02_H_a)
setwd("C:/Users/Alfonso Orrego/Documents/GitHub/Mortality/Life Tables/Calculos Propios")
write.csv(tabla_02_hombre, "tabla_02_hombre.csv", row.names = FALSE)
write.csv(TV_02_H_t, "TV_02_H_t.csv", row.names = FALSE)
write.csv(TV_02_H_a, "TV_02_H_a.csv", row.names = FALSE)
write.csv(TV_02_H_m, "TV_02_H_m.csv", row.names = FALSE)
write.csv(TV_02_H_b, "TV_02_H_b.csv", row.names = FALSE)
write.csv(tabla_02_mujer, "tabla_02_mujer_3.csv", row.names = FALSE)
write.csv(TV_02_M_t, "TV_02_M_t.csv", row.names = FALSE)
write.csv(TV_02_M_a, "TV_02_M_a.csv", row.names = FALSE)
write.csv(TV_02_M_m, "TV_02_M_m.csv", row.names = FALSE)
write.csv(TV_02_M_b, "TV_02_M_b.csv", row.names = FALSE)
qxs_h_a <- bind_cols(
TV_92_H_a %>% select(Edad,qx),
TV_02_H_a %>% select(qx),
TV_17_H_a %>% select(qx)
)
colnames(qxs_h_a) <- c("Edad","1992", "2002", "2017")
qxs_h_m <- bind_cols(
TV_92_H_m %>% select(Edad,qx),
TV_02_H_m %>% select(qx),
TV_17_H_m %>% select(qx)
)
colnames(qxs_h_m) <- c("Edad","1992", "2002", "2017")
qxs_h_b <- bind_cols(
TV_92_H_b %>% select(Edad,qx),
TV_02_H_b %>% select(qx),
TV_17_H_b %>% select(qx)
)
colnames(qxs_h_b) <- c("Edad","1992", "2002", "2017")
qxs_m_b <- bind_cols(
TV_92_M_b %>% select(Edad,qx),
TV_02_M_b %>% select(qx),
TV_17_M_b %>% select(qx)
)
colnames(qxs_m_b) <- c("Edad","1992", "2002", "2017")
qxs_m_m <- bind_cols(
TV_92_M_m %>% select(Edad,qx),
TV_02_M_m %>% select(qx),
TV_17_M_m %>% select(qx)
)
colnames(qxs_m_m) <- c("Edad","1992", "2002", "2017")
qxs_m_a <- bind_cols(
TV_92_M_a %>% select(Edad,qx),
TV_02_M_a %>% select(qx),
TV_17_M_a %>% select(qx)
)
colnames(qxs_m_a) <- c("Edad","1992", "2002", "2017")
############################## Esperanzas de Vida
exs_h_a <- bind_cols(
TV_92_H_a %>% select(Edad, e_0),
TV_02_H_a %>% select(e_0),
TV_17_H_a %>% select(e_0)
)
colnames(exs_h_a) <- c("Edad", "1992", "2002", "2017")
exs_h_m <- bind_cols(
TV_92_H_m %>% select(Edad, e_0),
TV_02_H_m %>% select(e_0),
TV_17_H_m %>% select(e_0)
)
colnames(exs_h_m) <- c("Edad", "1992", "2002", "2017")
exs_h_b <- bind_cols(
TV_92_H_b %>% select(Edad, e_0),
TV_02_H_b %>% select(e_0),
TV_17_H_b %>% select(e_0)
)
colnames(exs_h_b) <- c("Edad", "1992", "2002", "2017")
exs_m_b <- bind_cols(
TV_92_M_b %>% select(Edad, e_0),
TV_02_M_b %>% select(e_0),
TV_17_M_b %>% select(e_0)
)
colnames(exs_m_b) <- c("Edad", "1992", "2002", "2017")
exs_m_m <- bind_cols(
TV_92_M_m %>% select(Edad, e_0),
TV_02_M_m %>% select(e_0),
TV_17_M_m %>% select(e_0)
)
colnames(exs_m_m) <- c("Edad", "1992", "2002", "2017")
exs_m_a <- bind_cols(
TV_92_M_a %>% select(Edad, e_0),
TV_02_M_a %>% select(e_0),
TV_17_M_a %>% select(e_0)
)
colnames(exs_m_a) <- c("Edad", "1992", "2002", "2017")
View(exs_m_a)
View(exs_h_b)
View(exs_h_m)
View(exs_h_b)
View(exs_h_a)
View(exs_h_m)
View(exs_m_a)
View(exs_m_b)
ggplot()+
geom_line(exs_m_a, mapping = aes(x=Edad, y= 2017), color ="green")+
geom_point(exs_m_a, mapping = aes(x=Edad, y= 2017), color ="green")+
geom_line(exs_m_a, mapping = aes(x=Edad, y= 2002), color ="yellow")+
geom_point(exs_m_a, mapping = aes(x=Edad, y= 2002), color ="yellow")+
geom_line(exs_m_a, mapping = aes(x=Edad, y= 1992), color ="blue")+
geom_point(exs_m_a, mapping = aes(x=Edad, y= 1992), color ="blue")+
labs(x="Edad",y="Esperanzas escolaridad alta (mujeres)")
ggplot()+
geom_line(exs_m_a, mapping = aes(x=2017, y= Edad), color ="green")+
geom_point(exs_m_a, mapping = aes(x=2017, y= Edad), color ="green")+
geom_line(exs_m_a, mapping = aes(x=2002, y= Edad), color ="yellow")+
geom_point(exs_m_a, mapping = aes(x=2002, y= Edad), color ="yellow")+
geom_line(exs_m_a, mapping = aes(x=1992, y= Edad), color ="blue")+
geom_point(exs_m_a, mapping = aes(x=1992, y= Edad), color ="blue")+
labs(x="Edad",y="Esperanzas escolaridad alta (mujeres)")
View(exs_m_a)
View(tablas_oficiales_ine_m)
View(exs_m_b)
View(exs_h_a)
View(exs_h_b)
View(exs_h_m)
library(haven)
library(readr)
library(lubridate)
library(dplyr)
library(tidyr)
library(ggplot2)
data <- read.csv("C:/Users/Alfonso Orrego/OneDrive - Universidad Adolfo Ibanez/Simplex/UAI/Tesis/Tablas de vida/Longevidad y educacion/Datos/Censo/Censo 2017/Microdato_Censo2017-Personas.csv")
View(data)
data <- read.csv("C:/Users/Alfonso Orrego/OneDrive - Universidad Adolfo Ibanez/Simplex/UAI/Tesis/Tablas de vida/Longevidad y educacion/Datos/Censo/Censo 2017/Microdato_Censo2017-Personas.csv", sep = ";")
View(data)
head(data)
data <- data %>%
select(P08,P09,P14,P15,P15A,ESCOLARIDAD)
colnames(data) <- c("Edad", "Sexo", "Curso_aprobado", "Nivel_aprobado","Binario_nivel","Escolaridad")
distribucion_nivel <- data %>%
count(Nivel_aprobado)
View(distribucion_nivel)
distribucion_nivel <- data %>%
count(Nivel_aprobado) %>%
mutate(percentage = n / sum(n) * 100)
View(distribucion_nivel)
nombres <- c("Sala cuna", "Pre-K","Kinde","Especial/Diferencial","Basica","Primaria","Cientifico Humanista","Tecnica Profesional","Humanidades","Tecnica comercial/industrial","Tecnica Superior","Profesional","Magister","Doctor","No aplica","Missing")
nombres_df <- data.frame(attribute = 0:16, names = nombres)
nombres <- c("Sala cuna", "Pre-K", "Kinde", "Especial/Diferencial", "Basica", "Primaria",
"Cientifico Humanista", "Tecnica Profesional", "Humanidades",
"Tecnica comercial/industrial", "Tecnica Superior", "Profesional",
"Magister", "Doctor", "No aplica", "Missing", "Unknown")
# Create the names data frame
nombres_df <- data.frame(attribute = 0:16, names = nombres)
# Calculate the distribution and percentages
distribucion_nivel <- data %>%
count(Nivel_aprobado) %>%
mutate(percentage = n / sum(n) * 100)
# Join with the names data frame
result <- distribucion_nivel %>%
left_join(nombres_df, by = c("Nivel_aprobado" = "attribute"))
# Print the resulting data frame
print(result)
View(result)
View(nombres_df)
View(result)
View(nombres_df)
nombres <- c("Sala cuna", "Pre-K", "Kinde", "Especial/Diferencial", "Basica", "Primaria",
"Cientifico Humanista", "Tecnica Profesional", "Humanidades",
"Tecnica comercial/industrial", "Tecnica Superior", "Profesional",
"Magister", "Doctor", "No aplica", "Missing",)
nombres_df <- data.frame(attribute = 1:16, names = nombres)
rm(nombres_df,result,distribucion_nivel)
nombres <- c("Sala cuna", "Pre-K", "Kinde", "Especial/Diferencial", "Basica", "Primaria",
"Cientifico Humanista", "Tecnica Profesional", "Humanidades",
"Tecnica comercial/industrial", "Tecnica Superior", "Profesional",
"Magister", "Doctor", "No aplica", "Missing",)
nombres <- c("Sala cuna", "Pre-K", "Kinde", "Especial/Diferencial", "Basica", "Primaria",
"Cientifico Humanista", "Tecnica Profesional", "Humanidades",
"Tecnica comercial/industrial", "Tecnica Superior", "Profesional",
"Magister", "Doctor", "No aplica", "Missing")
nombres_df <- data.frame(attribute = 1:16, names = nombres)
distribucion_nivel <- data %>%
count(Nivel_aprobado) %>%
mutate(percentage = n / sum(n) * 100)
result <- distribucion_nivel %>%
left_join(nombres_df, by = c("Nivel_aprobado" = "attribute"))
View(result)
ggplot(result, aes(x = names, y = percentage, fill = names)) +
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start = 0) +
labs(title = "Composicion Niveles escolares (2017)(Fuente: Censo)") +
theme_void()
pie(result$percentage, labels = result$names, main = "Composicion Niveles escolares",
col = rainbow(length(result$percentage)))
pie(result$percentage, labels = result$Nivel_aprobado, main = "Composicion Niveles escolares",
col = rainbow(length(result$percentage)))
ggplot(result, aes(x = Nivel_aprobado, y = percentage, fill = names)) +
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start = 0) +
labs(title = "Composicion Niveles escolares (2017)(Fuente: Censo)") +
theme_void()
ggplot(result, aes(x = Nivel_aprobado, y = percentage, fill = Nivel_aprobado)) +
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start = 0) +
labs(title = "Composicion Niveles escolares (2017)(Fuente: Censo)") +
theme_void()
ggplot(result, aes(x = names, y = percentage)) +
geom_violin(trim = FALSE) +
labs(title = "Violin Plot Composicion Niveles escolares", x = "Niveles", y = "Porcentaje relativo") +
theme_minimal()
ggplot(result, aes(x = percentage , y = Nivel_aprobado)) +
geom_violin(trim = FALSE) +
labs(title = "Violin Plot Composicion Niveles escolares", x = "Niveles", y = "Porcentaje relativo") +
theme_minimal()
ggplot(result, aes(x = Nivel_aprobado , y = percentage)) +
geom_violin(trim = FALSE) +
labs(title = "Violin Plot Composicion Niveles escolares", x = "Niveles", y = "Porcentaje relativo") +
theme_minimal()
ggplot(result, aes(x = Nivel_aprobado , y = n)) +
geom_violin(trim = FALSE) +
labs(title = "Violin Plot Composicion Niveles escolares", x = "Niveles", y = "Porcentaje relativo") +
theme_minimal()
ggplot(result, aes(x = Nivel_aprobado , y = n)) +
geom_violin(trim = FALSE) +
labs(title = "Violin Plot Composicion Niveles escolares", x = "Niveles", y = "N") +
theme_minimal()
result <- result[-((nrow(result)-1):nrow(result)), ]
ggplot(result, aes(x = Nivel_aprobado , y = n)) +
geom_violin(trim = FALSE) +
labs(title = "Violin Plot Composicion Niveles escolares", x = "Niveles", y = "N") +
theme_minimal()
ggplot(result, aes(x = n , y = Nivel_aprobado)) +
geom_violin(trim = FALSE) +
labs(title = "Violin Plot Composicion Niveles escolares", x = "Niveles", y = "N") +
theme_minimal()
ggplot(result, aes(x = n , y = Nivel_aprobado)) +
geom_violin(trim = FALSE) +
labs(title = "Violin Plot Composicion Niveles escolares", x = "#", y = "Niveles") +
theme_minimal()
ggplot(result, aes(x = Nivel_aprobado, y = n, fill = Nivel_aprobado)) +
geom_violin(trim = FALSE, color = "black") +  # Draw the violin plot with black outline
geom_jitter(shape = 16, position = position_jitter(0.2), alpha = 0.4) +  # Add jittered points
labs(title = "Customized Violin Plot", x = "Variable", y = "Value") +
theme_minimal() +  # Use a minimal theme
theme(legend.position = "none")  # Remove legend
ggplot(result, aes(x = Nivel_aprobado , y = n)) +
geom_violin(trim = FALSE) +
labs(title = "Violin Plot Composicion Niveles escolares", x = "#", y = "Niveles") +
theme_minimal()
ggplot(result, aes(x = Nivel_aprobado , y = percentage)) +
geom_violin(trim = FALSE) +
labs(title = "Violin Plot Composicion Niveles escolares", x = "Niveles", y = "% relativo") +
theme_minimal()
ggplot(df, aes(x = Nivel_aprobado, y = percentage, fill = Nivel_aprobado)) +
geom_bar(stat = "identity") +
geom_text(aes(label = Nivel_aprobado), position = position_stack(vjust = 0.5)) +  # Add data labels
labs(title = "Stacked Bar Chart", x = "Nivel_aprobado", y = "% relativo") +
theme_minimal()  # Use a minimal theme
ggplot(result, aes(x = Nivel_aprobado, y = percentage, fill = Nivel_aprobado)) +
geom_bar(stat = "identity") +
geom_text(aes(label = Nivel_aprobado), position = position_stack(vjust = 0.5)) +  # Add data labels
labs(title = "Stacked Bar Chart", x = "Nivel_aprobado", y = "% relativo") +
theme_minimal()  # Use a minimal theme
ggplot(result, aes(x = Nivel_aprobado, y = percentage, fill = Nivel_aprobado)) +
geom_bar(stat = "identity") +
geom_text(aes(label = names), position = position_stack(vjust = 0.5)) +  # Add data labels
labs(title = "Stacked Bar Chart", x = "Nivel_aprobado", y = "% relativo") +
theme_minimal()  # Use a minimal theme
ggplot(result, aes(x = Nivel_aprobado, y = percentage, fill = names)) +
geom_bar(stat = "identity") +
geom_text(aes(label = names), position = position_stack(vjust = 0.5)) +  # Add data labels
labs(title = "Stacked Bar Chart", x = "Nivel_aprobado", y = "% relativo") +
theme_minimal()  # Use a minimal theme
ggplot(result, aes(x = Nivel_aprobado, y = percentage, fill = names)) +
geom_bar(stat = "identity") +
geom_text(aes(label = names), position = position_stack(vjust = 0.5)) +
labs(title = "Composicion educacional muestra total", x = "Nivel Aprobado", y = "% Relativo") +
theme_minimal()
ggplot(result, aes(x = Nivel_aprobado, y = percentage, fill = names)) +
geom_bar(stat = "identity") +
geom_text(aes(label = names), position = position_stack(vjust = 0.5)) +
labs(title = "Composicion escolaridad: muestra completa (Censo 2017)", x = "Nivel Aprobado", y = "% Relativo") +
theme_minimal()
names(result)[names(result) == "names"] <- "Nombres"
result <- distribucion_nivel %>%
left_join(nombres_df, by = c("Nivel_aprobado" = "attribute"))
names(result)[names(result) == "names"] <- "Nivel escolar"
ggplot(result, aes(x = Nivel_aprobado, y = percentage, fill = Nivel escolar)) +
ggplot(result, aes(x = Nivel_aprobado, y = percentage, fill = "Nivel escolar")) +
geom_bar(stat = "identity") +
geom_text(aes(label = names), position = position_stack(vjust = 0.5)) +
labs(title = "Composicion escolaridad: muestra completa (Censo 2017)", x = "Nivel Aprobado", y = "% Relativo") +
theme_minimal()
ggplot(result, aes(x = Nivel_aprobado, y = percentage, fill = Nivel escolar)) +
result <- distribucion_nivel %>%
left_join(nombres_df, by = c("Nivel_aprobado" = "attribute"))
result <- result[-((nrow(result)-1):nrow(result)), ] # Borrar los NA (6% de la muestra)
names(result)[names(result) == "names"] <- "Nivel_escolar"
result <- distribucion_nivel %>%
left_join(nombres_df, by = c("Nivel_aprobado" = "attribute"))
result <- result[-((nrow(result)-1):nrow(result)), ] # Borrar los NA (6% de la muestra)
names(result)[names(result) == "names"] <- "Nivel escolar"
ggplot(result, aes(x = Nivel_aprobado, y = percentage, fill = Nivel escolar)) +
result <- distribucion_nivel %>%
left_join(nombres_df, by = c("Nivel_aprobado" = "attribute"))
result <- result[-((nrow(result)-1):nrow(result)), ] # Borrar los NA (6% de la muestra)
names(result)[names(result) == "names"] <- "Nivel_escolar"
ggplot(result, aes(x = Nivel_aprobado, y = percentage, fill = Nivel_escolar)) +
geom_bar(stat = "identity") +
geom_text(aes(label = Nivel_escolar), position = position_stack(vjust = 0.5)) +
labs(title = "Composicion escolaridad: muestra completa (Censo 2017)", x = "Nivel Aprobado", y = "% Relativo") +
theme_minimal()
View(data)
names(data)[names(data) == "Edad"] <- "Sexo"
names(data)[names(data) == "Sexo"] <- "Edad"
names(data)[names(data) == "Edad"] <- "Sexo"
names(data)[names(data) == "Sexo"] <- "Edad"
data <- read.csv("C:/Users/Alfonso Orrego/OneDrive - Universidad Adolfo Ibanez/Simplex/UAI/Tesis/Tablas de vida/Longevidad y educacion/Datos/Censo/Censo 2017/Microdato_Censo2017-Personas.csv", sep = ";")
data <- data %>%
select(P08,P09,P14,P15,P15A,ESCOLARIDAD)
head(data)
data <- data %>%
rename(
Sexo = P08,
Edad = P09,
Curso = P14,
Nivel = P15,
Binario_nivel = P15A
)
head(data)
str(data)
str(data$Curso)
summarise(data$Curso)
summary(data$Curso)
install.packages("psych")
library(psych)
describe(data$Curso)
View(distribucion_nivel)
View(result)
describe(data$Nivel) # Estadisticas descriptivas de Nivel
data_male <- data %>% filter(Sexo == 1)
data_female <- data %>% filter(Sexo == 2)
data_male_25_up <- data_male %>% filter(Edad >= 25)
data_female_25_up <- data_female %>% filter(Edad >= 25)
data_male_60_up <- data_male %>% filter(Edad >= 60)
data_female_60_up <- data_female %>% filter(Edad >= 60)
data_male_85_up <- data_male %>% filter(Edad >= 85)
data_female_85_up <- data_female %>% filter(Edad >= 85)
# Define the function to create and plot distribution
plot_distribution <- function(data_subset, title_suffix) {
distribucion_nivel <- data_subset %>%
count(Nivel) %>%
mutate(percentage = n / sum(n) * 100)
result <- distribucion_nivel %>%
left_join(nombres_df, by = c("Nivel" = "attribute"))
result <- result[-((nrow(result)-1):nrow(result)), ] # Remove NAs (if needed)
names(result)[names(result) == "names"] <- "Nivel_escolar"
ggplot(result, aes(x = Nivel, y = percentage, fill = Nivel_escolar)) +
geom_bar(stat = "identity") +
geom_text(aes(label = Nivel_escolar), position = position_stack(vjust = 0.5)) +
labs(title = paste("Composicion escolaridad:", title_suffix), x = "Nivel Aprobado", y = "% Relativo") +
theme_minimal()
}
# Apply the function to each data frame
plot_distribution(data_male_25_up, "Males 25 and Up")
plot_distribution(data_female_25_up, "Females 25 and Up")
plot_distribution(data_male_60_up, "Males 60 and Up")
plot_distribution(data_female_60_up, "Females 60 and Up")
plot_distribution(data_male_85_up, "Males 85 and Up")
plot_distribution(data_female_85_up, "Females 85 and Up")
plot_distribution <- function(data_subset, title_suffix) {
distribucion_nivel <- data_subset %>%
count(Nivel) %>%
mutate(percentage = n / sum(n) * 100)
result <- distribucion_nivel %>%
left_join(nombres_df, by = c("Nivel" = "attribute"))
result <- result[-((nrow(result)-1):nrow(result)), ] # Remove NAs (if needed)
names(result)[names(result) == "names"] <- "Nivel_escolar"
ggplot(result, aes(x = Nivel, y = percentage, fill = Nivel_escolar)) +
geom_bar(stat = "identity") +
geom_text(aes(label = Nivel_escolar), position = position_stack(vjust = 0.5)) +
labs(title = paste("Composicion escolaridad:", title_suffix), x = "Nivel Aprobado", y = "% Relativo") +
theme_minimal()
}
# Apply the function to each data frame
plot_distribution(data_male_25_up, "Hombres +25")
plot_distribution(data_female_25_up, "Mujeres +25")
plot_distribution(data_male_60_up, "Hombres +60")
plot_distribution(data_female_60_up, "Mujeres +60")
plot_distribution(data_male_85_up, "Hombres +85")
plot_distribution(data_female_85_up, "Mujeres +85")
plot_distribution(data_male, "Hombres")
plot_distribution(data_female, "Mujeres")
data <- data %>% # tramos escolaridad INE
mutate(
tramo_esc = case_when(
(Nivel >= 11 & nivel < 15)  ~ "alta",
(Nivel > 6 & nivel < 11) ~ "media",
(Nivel <= 6) ~ "baja", # se agrega 7mo y 8vo a esta categoria
TRUE ~ NA_character_  # Resto seran NAs
)
)
data <- data %>% # tramos escolaridad INE
mutate(
tramo_esc = case_when(
(Nivel >= 11 & Nivel < 15)  ~ "alta",
(Nivel > 6 & Nivel < 11) ~ "media",
(Nivel <= 6) ~ "baja", # se agrega 7mo y 8vo a esta categoria
TRUE ~ NA_character_  # Resto seran NAs
)
)
data_male <- data %>% filter(Sexo == 1)
data_female <- data %>% filter(Sexo == 2)
# Ahora para tramos etarios : >25, >60, >85
data_male_25_up <- data_male %>% filter(Edad >= 25)
data_female_25_up <- data_female %>% filter(Edad >= 25)
data_male_60_up <- data_male %>% filter(Edad >= 60)
data_female_60_up <- data_female %>% filter(Edad >= 60)
data_male_85_up <- data_male %>% filter(Edad >= 85)
data_female_85_up <- data_female %>% filter(Edad >= 85)
distribucion_nivel <- data %>% # muestra completa
count(tramo_esc) %>%
mutate(percentage = n / sum(n) * 100)
View(distribucion_nivel)
plot_tramos <- function(data_subset, title_suffix) {
distribucion_nivel <- data_subset %>%
count(tramo_esc) %>%
mutate(percentage = n / sum(n) * 100)
distribucion_nivel <- distribucion_nivel[-((nrow(distribucion_nivel)-1):nrow(distribucion_nivel)), ] # Remove NAs (if needed)
names(distribucion_nivel)[names(distribucion_nivel) == "tramo_esc"] <- "Tramos"
ggplot(distribucion_nivel, aes(x = Tramos, y = percentage, fill = Tramos)) +
geom_bar(stat = "identity") +
geom_text(aes(label = Nivel_escolar), position = position_stack(vjust = 0.5)) +
labs(title = paste("Composicion escolaridad:", title_suffix), x = "Nivel Aprobado", y = "% Relativo") +
theme_minimal()
plot_tramos <- function(data_subset, title_suffix) {
distribucion_nivel <- data_subset %>%
count(tramo_esc) %>%
mutate(percentage = n / sum(n) * 100)
distribucion_nivel <- distribucion_nivel[-((nrow(distribucion_nivel)-1):nrow(distribucion_nivel)), ] # Remove NAs (if needed)
names(distribucion_nivel)[names(distribucion_nivel) == "tramo_esc"] <- "Tramos"
ggplot(distribucion_nivel, aes(x = Tramos, y = percentage, fill = Tramos)) +
geom_bar(stat = "identity") +
geom_text(aes(label = Nivel_escolar), position = position_stack(vjust = 0.5)) +
labs(title = paste("Composicion escolaridad:", title_suffix), x = "Nivel Aprobado", y = "% Relativo") +
theme_minimal()
}
