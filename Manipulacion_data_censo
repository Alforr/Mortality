#Instalemos paquetes a usar:
{
install.packages("haven")
  
}  

#Usemos los paquetes
{
library(haven)
library(readr)
library(lubridate)
library(dplyr)
library(tidyr)  
library(ggplot2) 
}

#Manipulemos datos

data <- read_dta("C:/Users/Alfonso Orrego/OneDrive - Universidad Adolfo Ibanez/Simplex/UAI/Tesis/Tablas de vida/Longevidad y educacion/Datos/Censo/censo_2017.dta")

#Borremos filtros de stata inutiles:
data <- data %>% select(-filtro_bajo)
data <- data %>% select(-filtro_medio)
data <- data %>% select(-filtro_alto)

valores_escolaridad <- table(data$escolaridad)
print(valores_escolaridad)

#Generemos categorias de escolaridad inteligentemente: usaremos nivel que tiene mas posibles valores para explorar:
#Valores nivel aprobado:
#1:sala cuna, 2:Prekinder, 3:Kinder, 4: Especial o diferencial, 5: educacion basica.
#6:primaria o preparatorio(sistema antiguo),7: Cientifico-humanista, 8:Tecnica profesional, 9:humanidades, 10:tecnica comercial/industrial/normalista
#11:tecnico superior, 12: profesional, 13: magister, 14: doctorado
#98: no aplica, 99: no esta.
data <- data %>%
  mutate(
    nivel_aprobado = ifelse(nivel_aprobado > 15, NA, nivel_aprobado),
    TRAMO_ESC = case_when(
      nivel_aprobado <= 5 ~ "Bajo",
      nivel_aprobado >= 6 & nivel_aprobado <= 10 ~ "Medio",
      nivel_aprobado >= 11 ~ "Alto"
    )
  )
#Borremos los NA que no tienen categoria ni nada, se pierden varios datos no categoralizables.
na.omit(data$TRAMO_ESC)
#Revisemos los datos de nivel aprobado
valores_escolaridad <- table(data$nivel_aprobado)
print(valores_escolaridad)

#Generemos variables de genero con label para facilitar procesamiento futuro.
data <- data %>%
  mutate(
    gender = case_when(
      sexo == 1 ~ "male",
      sexo ==  2 ~ "female"
    )
  )
#Borremos la variable 1/2 de sexo de la base
data <- data %>% select(-sexo)
data <- na.omit(data)

#Revisemos los datos de tramo esc
valores_escolaridad <- table(data$TRAMO_ESC)
print(valores_escolaridad)


#Generemos los data frames de cada categoria
tramos <- unique(data$TRAMO_ESC)
generos <- unique(data$gender)
tablas_censo <- list() #filtered_dfs, lista que contendra todos los df
crear_df_filtrado <- function(data, genero, tramo_escolaridad) {
  df_filtrado <- data %>%
    filter(gender == genero, TRAMO_ESC == tramo_escolaridad) %>%
    group_by(edad) %>%
    summarise(Count = n()) %>%
    arrange(edad)
  return(df_filtrado)
}

for (genero in generos) {
  for (tramo_esc in tramos) {
      # Ponerle Nombre al data frame: GENERO_TRAMO_AÃ±o
      df_nombre <- paste(genero, tramo_esc, sep = "_")
      
      # Rellenar la lista con las tablas de defuncion
      tablas_censo[[df_nombre]] <- crear_df_filtrado(data, genero, tramo_esc)
    }
}

#Chequiemos que las cosas estan bien: 
{
df_revision <- tablas_censo[[1]]
head(df_revision)
str(df_revision)
summary(df_revision)
print(df_revision)
suma_columna <- sum(df_revision$Count, na.rm = TRUE)
print(suma_columna)
}

#Cambiemos el nombre de las columnas para que este todo bien formateado
nombres_columnas <- c("Edad", "Cantidad")

for (i in 1:length(tablas_censo)) {
  tablas_censo[[i]] <- setNames(tablas_censo[[i]], nombres_columnas)
}

#Plotear poblacion:
ggplot(data = df_revision, aes(x = Edad, y = Cantidad)) +
  geom_line() +
  geom_point() + 
  labs(title = "Cantidad de gente por edad",
       x = "Edad",
       y = "Cantidad") +
  theme_minimal() # aesthetics
 
#Escribamos los csv para guardarlos:
setwd("C:/Users/Alfonso Orrego/OneDrive - Universidad Adolfo Ibanez/Simplex/UAI/Tesis/Tablas de vida/Longevidad y educacion/Datos/Censo/csv-personas-censo-2017")
getwd() #chequear que este bien el directorio para guardar el trabajo

escoger_df <- tablas_censo #ESCOGER EL DF PARA ESCRIBIR
for (nombre in names(escoger_df)) {
  # Pongamosle nombre
  file_name <- paste0(nombre, ".csv")
  
  # Escribir el CSV, va a quedar guardado en el directorio actual.
  write.csv(escoger_df[[nombre]], file = file_name, row.names = FALSE)
}
