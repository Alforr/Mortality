geom_vline(xintercept = 75, linetype = "dashed", color = "black") +
geom_vline(xintercept = 85, linetype = "dashed", color = "black") +
labs(
title = paste("Comparison of Probability of Death (qx) for", category, gender, year),
x = "Age",
y = "Probability of Death (qx)",
color = "Method"
) +
scale_color_manual(values = c("Observed" = "blue", "WH" = "red", "Splines" = "green")) +
xlim(60, max(life_table_data[[paste0("lf", gender, "_", category, "_", year, "_observed")]]$Edad)) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5),
legend.position = "top"
)
# Save the plot
ggsave(paste0("qx_comparison_", category, "_", gender, "_", year, ".png"), plot = plot)
}
}
plot_qx_comparison(life_table_data, "h", "92")
plot_qx_comparison(life_table_data, "m", "92")
plot_qx_comparison(life_table_data, "h", "02")
plot_qx_comparison(life_table_data, "m", "02")
plot_qx_comparison(life_table_data, "h", "17")
plot_qx_comparison(life_table_data, "m", "17")
save_life_tables_to_csv <- function(life_table_data, gender, year) {
categories <- c("alta", "media", "baja", "totales")
methods <- c("observed", "WH", "splines")
for (category in categories) {
for (method in methods) {
file_name <- paste0("life_table_", gender, "_", category, "_", year, "_", method, ".csv")
write.csv(life_table_data[[paste0("lf", gender, "_", category, "_", year, "_", method)]], file_name, row.names = FALSE)
}
}
}
save_life_tables_to_csv(life_table_data, "h", "92")
save_life_tables_to_csv(life_table_data, "m", "92")
save_life_tables_to_csv(life_table_data, "h", "02")
save_life_tables_to_csv(life_table_data, "m", "02")
save_life_tables_to_csv(life_table_data, "h", "17")
save_life_tables_to_csv(life_table_data, "m", "17")
save_life_tables_as_images <- function(life_table_data, gender, year) {
categories <- c("alta", "media", "baja", "totales")
methods <- c("observed", "WH", "splines")
for (category in categories) {
for (method in methods) {
life_table_subset <- life_table_data[[paste0("lf", gender, "_", category, "_", year, "_", method)]] %>%
filter(Edad >= 50 & Edad <= 85)
plot <- ggplot(life_table_subset, aes(x = Edad)) +
geom_line(aes(y = e_0, color = "e_0"), size = 1) +
geom_point(aes(y = e_0, color = "e_0"), size = 1.5) +
labs(
title = paste("Life Table (", category, gender, year, ")", sep = ""),
x = "Age",
y = "e_0"
) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5)
)
file_name <- paste0("life_table_", gender, "_", category, "_", year, "_", method, "_50to85.png")
ggsave(file_name, plot = plot)
}
}
}
save_life_tables_as_images(life_table_data, "h", "92")
library(gridExtra)
save_life_tables_as_images <- function(life_table_data, gender, year) {
categories <- c("alta", "media", "baja", "totales")
methods <- c("observed", "WH", "splines")
for (category in categories) {
for (method in methods) {
life_table_subset <- life_table_data[[paste0("lf", gender, "_", category, "_", year, "_", method)]] %>%
filter(Edad >= 50 & Edad <= 85)
# Create a table grob
table_grob <- tableGrob(life_table_subset)
# Save the table as an image
file_name <- paste0("life_table_", gender, "_", category, "_", year, "_", method, "_50to85.png")
ggsave(file_name, plot = table_grob, width = 10, height = 8, units = "in")
}
}
}
save_life_tables_as_images(life_table_data, "h", "92")
save_life_tables_as_images <- function(life_table_data, gender, year) {
categories <- c("alta", "media", "baja", "totales")
methods <- c("observed", "WH", "splines")
for (category in categories) {
for (method in methods) {
# Construct the life table name
life_table_name <- paste0("lf", gender, "_", category, "_", year, "_", method)
# Check if the life table exists in the list
if (exists(life_table_name, where = life_table_data)) {
life_table_subset <- life_table_data[[life_table_name]] %>%
filter(Edad >= 50 & Edad <= 85)
# Create a table grob
table_grob <- tableGrob(life_table_subset)
# Save the table as an image
file_name <- paste0("life_table_", gender, "_", category, "_", year, "_", method, "_50to85.png")
ggsave(file_name, plot = table_grob, width = 10, height = 8, units = "in")
} else {
message(paste("Life table", life_table_name, "not found. Skipping."))
}
}
}
}
save_life_tables_as_images(life_table_data, "h", "92")
create_joined_dataframe <- function(df1, df2, df3, df4_pob, edad_range, output_name) {
# Create a data frame with one column "Edad" that goes from the start to the end of the specified range
edad_df <- data.frame(Edad = edad_range)
# Left join the three data frames on the "Edad" variable
joined_df <- edad_df %>%
left_join(df1, by = "Edad") %>%
left_join(df2, by = "Edad") %>%
left_join(df3, by = "Edad") %>%
left_join(df4_pob, by = "Edad")
# Remove the 'year', 'total', and 'NA' columns if they exist
columns_to_remove <- c("year", "total", "NA")
joined_df <- joined_df %>%
select(-any_of(columns_to_remove))
# Filter to keep only ages 25 and up
joined_df <- joined_df %>%
filter(Edad >= 25)
# Determine the maximum age to group from
max_age <- max(edad_range)
# Group ages from max_age and above and summarize the data
tabla_sub_max <- joined_df %>%
filter(Edad < max_age)
tabla_max_y_mas <- joined_df %>%
filter(Edad >= max_age) %>%
summarise(
Edad = max_age,
alta = sum(alta, na.rm = TRUE),
media = sum(media, na.rm = TRUE),
baja = sum(baja, na.rm = TRUE),
esc_bajo = sum(esc_bajo, na.rm = TRUE),
esc_medio = sum(esc_medio, na.rm = TRUE),
esc_alto = sum(esc_alto, na.rm = TRUE)
)
# Combine the summarized data with the other age groups
joined_df <- tabla_sub_max %>%
bind_rows(tabla_max_y_mas) %>%
arrange(Edad)
# Compute the totals for mortality and population
joined_df <- joined_df %>%
mutate(
totales = baja + media + alta,
esc_totales = esc_bajo + esc_medio + esc_alto
)
# Assign the resulting data frame to the name specified in the function input
assign(output_name, joined_df, envir = .GlobalEnv)
# Return the joined data frame
return(joined_df)
}
create_joined_dataframe <- function(df1, df2, df3, df4_pob, edad_range, output_name) {
# Create a data frame with one column "Edad" that goes from the start to the end of the specified range
edad_df <- data.frame(Edad = edad_range)
# Left join the three data frames on the "Edad" variable
joined_df <- edad_df %>%
left_join(df1, by = "Edad") %>%
left_join(df2, by = "Edad") %>%
left_join(df3, by = "Edad") %>%
left_join(df4_pob, by = "Edad")
# Remove the 'year', 'total', and 'NA' columns if they exist
columns_to_remove <- c("year", "total", "NA")
joined_df <- joined_df %>%
select(-any_of(columns_to_remove))
# Filter to keep only ages 25 and up
joined_df <- joined_df %>%
filter(Edad >= 25)
# Determine the maximum age to group from
max_age <- max(edad_range)
# Group ages from max_age and above and summarize the data
tabla_sub_max <- joined_df %>%
filter(Edad < max_age)
tabla_max_y_mas <- joined_df %>%
filter(Edad >= max_age) %>%
summarise(
Edad = max_age,
alta = sum(alta, na.rm = TRUE),
media = sum(media, na.rm = TRUE),
baja = sum(baja, na.rm = TRUE),
esc_bajo = sum(esc_bajo, na.rm = TRUE),
esc_medio = sum(esc_medio, na.rm = TRUE),
esc_alto = sum(esc_alto, na.rm = TRUE)
)
# Combine the summarized data with the other age groups
joined_df <- tabla_sub_max %>%
bind_rows(tabla_max_y_mas) %>%
arrange(Edad)
# Compute the totals for mortality and population
joined_df <- joined_df %>%
mutate(
totales = baja + media + alta,
esc_totales = esc_bajo + esc_medio + esc_alto
)
# Assign the resulting data frame to the name specified in the function input
assign(output_name, joined_df, envir = .GlobalEnv)
# Return the joined data frame
return(joined_df)
}
defs_h_baja <- defs %>%
filter(Sexo == 1, Ano_fa %in% c(1991, 1992, 1993), tramo_esc == "baja") %>%
group_by(Edad, tramo_esc) %>%
summarise(Count = round(n() / 3), .groups = 'drop') %>%
pivot_wider(names_from = tramo_esc, values_from = Count, values_fill = list(Count = 0))
defs_h_media <- defs %>%
filter(Sexo == 1, Ano_fa %in% c(1991, 1992, 1993), tramo_esc == "media") %>%
group_by(Edad, tramo_esc) %>%
summarise(Count = round(n() / 3), .groups = 'drop') %>%
pivot_wider(names_from = tramo_esc, values_from = Count, values_fill = list(Count = 0))
defs_h_alta <- defs %>%
filter(Sexo == 1, Ano_fa %in% c(1991, 1992, 1993), tramo_esc == "alta") %>%
group_by(Edad, tramo_esc) %>%
summarise(Count = round(n() / 3), .groups = 'drop') %>%
pivot_wider(names_from = tramo_esc, values_from = Count, values_fill = list(Count = 0))
smot_h_92 <- create_joined_dataframe(defs_h_baja, defs_h_media, defs_h_alta, df_hombre_92, 1:90, "tab_h_92")
View(tab_h_92)
defs_h_baja <- defs %>%
filter(Sexo == 1, Ano_fa %in% c(1991, 1992, 1993), tramo_esc == "baja") %>%
group_by(Edad, tramo_esc) %>%
summarise(Count = round(n() / 3), .groups = 'drop') %>%
pivot_wider(names_from = tramo_esc, values_from = Count, values_fill = list(Count = 0))
defs_h_media <- defs %>%
filter(Sexo == 1, Ano_fa %in% c(1991, 1992, 1993), tramo_esc == "media") %>%
group_by(Edad, tramo_esc) %>%
summarise(Count = round(n() / 3), .groups = 'drop') %>%
pivot_wider(names_from = tramo_esc, values_from = Count, values_fill = list(Count = 0))
defs_h_alta <- defs %>%
filter(Sexo == 1, Ano_fa %in% c(1991, 1992, 1993), tramo_esc == "alta") %>%
group_by(Edad, tramo_esc) %>%
summarise(Count = round(n() / 3), .groups = 'drop') %>%
pivot_wider(names_from = tramo_esc, values_from = Count, values_fill = list(Count = 0))
smot_h_92 <- create_joined_dataframe(defs_h_baja, defs_h_media, defs_h_alta, df_hombre_92, edad_grouping, "tab_h_92")
edad_grouping = 25:90
smot_h_92 <- create_joined_dataframe(defs_h_baja, defs_h_media, defs_h_alta, df_hombre_92, edad_grouping, "tab_h_92")
View(smot_m_92)
View(tab_h_92)
View(tab_h_92)
# Hombres 1992
{
defs_h_baja <- defs %>%
filter(Sexo == 1, Ano_fa %in% c(1991, 1992, 1993), tramo_esc == "baja") %>%
group_by(Edad, tramo_esc) %>%
summarise(Count = round(n() / 3), .groups = 'drop') %>%
pivot_wider(names_from = tramo_esc, values_from = Count, values_fill = list(Count = 0))
defs_h_media <- defs %>%
filter(Sexo == 1, Ano_fa %in% c(1991, 1992, 1993), tramo_esc == "media") %>%
group_by(Edad, tramo_esc) %>%
summarise(Count = round(n() / 3), .groups = 'drop') %>%
pivot_wider(names_from = tramo_esc, values_from = Count, values_fill = list(Count = 0))
defs_h_alta <- defs %>%
filter(Sexo == 1, Ano_fa %in% c(1991, 1992, 1993), tramo_esc == "alta") %>%
group_by(Edad, tramo_esc) %>%
summarise(Count = round(n() / 3), .groups = 'drop') %>%
pivot_wider(names_from = tramo_esc, values_from = Count, values_fill = list(Count = 0))
smot_h_92 <- create_joined_dataframe(defs_h_baja, defs_h_media, defs_h_alta, df_hombre_92, edad_grouping, "tab_h_92")
}
# Mujeres 1992
{
defs_m_baja <- defs %>%
filter(Sexo == 2, Ano_fa %in% c(1991, 1992, 1993), tramo_esc == "baja") %>%
group_by(Edad, tramo_esc) %>%
summarise(Count = round(n() / 3), .groups = 'drop') %>%
pivot_wider(names_from = tramo_esc, values_from = Count, values_fill = list(Count = 0))
defs_m_media <- defs %>%
filter(Sexo == 2, Ano_fa %in% c(1991, 1992, 1993), tramo_esc == "media") %>%
group_by(Edad, tramo_esc) %>%
summarise(Count = round(n() / 3), .groups = 'drop') %>%
pivot_wider(names_from = tramo_esc, values_from = Count, values_fill = list(Count = 0))
defs_m_alta <- defs %>%
filter(Sexo == 2, Ano_fa %in% c(1991, 1992, 1993), tramo_esc == "alta") %>%
group_by(Edad, tramo_esc) %>%
summarise(Count = round(n() / 3), .groups = 'drop') %>%
pivot_wider(names_from = tramo_esc, values_from = Count, values_fill = list(Count = 0))
smot_m_92 <- create_joined_dataframe(defs_m_baja, defs_m_media, defs_m_alta, df_mujer_92, edad_grouping, "tab_m_92")
}
# Hombres 2002
{
defs_h_baja <- defs %>%
filter(Sexo == 1, Ano_fa %in% c(2001, 2002, 2003), tramo_esc == "baja") %>%
group_by(Edad, tramo_esc) %>%
summarise(Count = round(n() / 3), .groups = 'drop') %>%
pivot_wider(names_from = tramo_esc, values_from = Count, values_fill = list(Count = 0))
defs_h_media <- defs %>%
filter(Sexo == 1, Ano_fa %in% c(2001, 2002, 2003), tramo_esc == "media") %>%
group_by(Edad, tramo_esc) %>%
summarise(Count = round(n() / 3), .groups = 'drop') %>%
pivot_wider(names_from = tramo_esc, values_from = Count, values_fill = list(Count = 0))
defs_h_alta <- defs %>%
filter(Sexo == 1, Ano_fa %in% c(2001, 2002, 2003), tramo_esc == "alta") %>%
group_by(Edad, tramo_esc) %>%
summarise(Count = round(n() / 3), .groups = 'drop') %>%
pivot_wider(names_from = tramo_esc, values_from = Count, values_fill = list(Count = 0))
smot_h_02 <- create_joined_dataframe(defs_h_baja, defs_h_media, defs_h_alta, df_hombre_02, edad_grouping, "tab_h_02")
}
# Mujeres 2002
{
defs_m_baja <- defs %>%
filter(Sexo == 2, Ano_fa %in% c(2001, 2002, 2003), tramo_esc == "baja") %>%
group_by(Edad, tramo_esc) %>%
summarise(Count = round(n() / 3), .groups = 'drop') %>%
pivot_wider(names_from = tramo_esc, values_from = Count, values_fill = list(Count = 0))
defs_m_media <- defs %>%
filter(Sexo == 2, Ano_fa %in% c(2001, 2002, 2003), tramo_esc == "media") %>%
group_by(Edad, tramo_esc) %>%
summarise(Count = round(n() / 3), .groups = 'drop') %>%
pivot_wider(names_from = tramo_esc, values_from = Count, values_fill = list(Count = 0))
defs_m_alta <- defs %>%
filter(Sexo == 2, Ano_fa %in% c(2001, 2002, 2003), tramo_esc == "alta") %>%
group_by(Edad, tramo_esc) %>%
summarise(Count = round(n() / 3), .groups = 'drop') %>%
pivot_wider(names_from = tramo_esc, values_from = Count, values_fill = list(Count = 0))
smot_m_02 <- create_joined_dataframe(defs_m_baja, defs_m_media, defs_m_alta, df_mujer_02, edad_grouping, "tab_m_02")
}
# Hombres 2017
{
defs_h_baja <- defs %>%
filter(Sexo == 1, Ano_fa %in% c(2016, 2017, 2018), tramo_esc == "baja") %>%
group_by(Edad, tramo_esc) %>%
summarise(Count = round(n() / 3), .groups = 'drop') %>%
pivot_wider(names_from = tramo_esc, values_from = Count, values_fill = list(Count = 0))
defs_h_media <- defs %>%
filter(Sexo == 1, Ano_fa %in% c(2016, 2017, 2018), tramo_esc == "media") %>%
group_by(Edad, tramo_esc) %>%
summarise(Count = round(n() / 3), .groups = 'drop') %>%
pivot_wider(names_from = tramo_esc, values_from = Count, values_fill = list(Count = 0))
defs_h_alta <- defs %>%
filter(Sexo == 1, Ano_fa %in% c(2016, 2017, 2018), tramo_esc == "alta") %>%
group_by(Edad, tramo_esc) %>%
summarise(Count = round(n() / 3), .groups = 'drop') %>%
pivot_wider(names_from = tramo_esc, values_from = Count, values_fill = list(Count = 0))
smot_h_17 <- create_joined_dataframe(defs_h_baja, defs_h_media, defs_h_alta, df_hombre_17, edad_grouping, "tab_h_17")
}
# Mujeres 2017
{
defs_m_baja <- defs %>%
filter(Sexo == 2, Ano_fa %in% c(2016, 2017, 2018), tramo_esc == "baja") %>%
group_by(Edad, tramo_esc) %>%
summarise(Count = round(n() / 3), .groups = 'drop') %>%
pivot_wider(names_from = tramo_esc, values_from = Count, values_fill = list(Count = 0))
defs_m_media <- defs %>%
filter(Sexo == 2, Ano_fa %in% c(2016, 2017, 2018), tramo_esc == "media") %>%
group_by(Edad, tramo_esc) %>%
summarise(Count = round(n() / 3), .groups = 'drop') %>%
pivot_wider(names_from = tramo_esc, values_from = Count, values_fill = list(Count = 0))
defs_m_alta <- defs %>%
filter(Sexo == 2, Ano_fa %in% c(2016, 2017, 2018), tramo_esc == "alta") %>%
group_by(Edad, tramo_esc) %>%
summarise(Count = round(n() / 3), .groups = 'drop') %>%
pivot_wider(names_from = tramo_esc, values_from = Count, values_fill = list(Count = 0))
smot_m_17 <- create_joined_dataframe(defs_m_baja, defs_m_media, defs_m_alta, df_mujer_17, edad_grouping, "tab_m_17")
}
View(tab_h_02)
# Data frames con mortalidad suavizada y exposiciones suavizadas y observadas:
{
smot_h_92 <- smooth_mortality(tab_h_92)
smot_m_92 <- smooth_mortality(tab_m_92)
smot_h_02 <- smooth_mortality(tab_h_02)
smot_m_02 <- smooth_mortality(tab_m_02)
smot_h_17 <- smooth_mortality(tab_h_17)
smot_m_17 <- smooth_mortality(tab_m_17)
}
# Tablas de vida por metodo y año:
{
generate_life_tables(smot_h_92, "h", "92")
generate_life_tables(smot_m_92, "m", "92")
generate_life_tables(smot_h_02, "h", "02")
generate_life_tables(smot_m_02, "m", "02")
generate_life_tables(smot_h_17, "h", "17")
generate_life_tables(smot_m_17, "m", "17")
}
# Ahora plotiemos:
{
# Donde guardamos las cosas:
{
#setwd("C:/Users/Alfonso Orrego/Documents/GitHub/Mortality/Results/Grouping/99") #para edad maxima 99
setwd("C:/Users/Alfonso Orrego/Documents/GitHub/Mortality/Results/Grouping/90") #para edad maxima 90
#setwd("C:/Users/Alfonso Orrego/Documents/GitHub/Mortality/Results/Grouping/88") #para edad maxima 88
}
# Plots de Mxs:
{
plot_mortality_comparison(smot_h_92, "1992", "hombres")
plot_mortality_comparison(smot_m_92, "1992", "mujeres")
plot_mortality_comparison(smot_h_02, "2002", "hombres")
plot_mortality_comparison(smot_m_02, "2002", "mujeres")
plot_mortality_comparison(smot_h_17, "2017", "hombres")
plot_mortality_comparison(smot_m_17, "2017", "mujeres")
}
# Plots de e_0s
{
{
life_table_data <- list(
# 1992 - Hombres
lfh_alta_92_observed = lfh_alta_92_observed,
lfh_alta_92_WH = lfh_alta_92_wh,
lfh_alta_92_Splines = lfh_alta_92_splines,
lfh_media_92_observed = lfh_media_92_observed,
lfh_media_92_WH = lfh_media_92_wh,
lfh_media_92_Splines = lfh_media_92_splines,
lfh_baja_92_observed = lfh_baja_92_observed,
lfh_baja_92_WH = lfh_baja_92_wh,
lfh_baja_92_Splines = lfh_baja_92_splines,
lfh_totales_92_observed = lfh_totales_92_observed,
lfh_totales_92_WH = lfh_totales_92_wh,
lfh_totales_92_Splines = lfh_totales_92_splines,
# 1992 - Mujeres
lfm_alta_92_observed = lfm_alta_92_observed,
lfm_alta_92_WH = lfm_alta_92_wh,
lfm_alta_92_Splines = lfm_alta_92_splines,
lfm_media_92_observed = lfm_media_92_observed,
lfm_media_92_WH = lfm_media_92_wh,
lfm_media_92_Splines = lfm_media_92_splines,
lfm_baja_92_observed = lfm_baja_92_observed,
lfm_baja_92_WH = lfm_baja_92_wh,
lfm_baja_92_Splines = lfm_baja_92_splines,
lfm_totales_92_observed = lfm_totales_92_observed,
lfm_totales_92_WH = lfm_totales_92_wh,
lfm_totales_92_Splines = lfm_totales_92_splines,
# 2002 - Hombres
lfh_alta_02_observed = lfh_alta_02_observed,
lfh_alta_02_WH = lfh_alta_02_wh,
lfh_alta_02_Splines = lfh_alta_02_splines,
lfh_media_02_observed = lfh_media_02_observed,
lfh_media_02_WH = lfh_media_02_wh,
lfh_media_02_Splines = lfh_media_02_splines,
lfh_baja_02_observed = lfh_baja_02_observed,
lfh_baja_02_WH = lfh_baja_02_wh,
lfh_baja_02_Splines = lfh_baja_02_splines,
lfh_totales_02_observed = lfh_totales_02_observed,
lfh_totales_02_WH = lfh_totales_02_wh,
lfh_totales_02_Splines = lfh_totales_02_splines,
# 2002 - Mujeres
lfm_alta_02_observed = lfm_alta_02_observed,
lfm_alta_02_WH = lfm_alta_02_wh,
lfm_alta_02_Splines = lfm_alta_02_splines,
lfm_media_02_observed = lfm_media_02_observed,
lfm_media_02_WH = lfm_media_02_wh,
lfm_media_02_Splines = lfm_media_02_splines,
lfm_baja_02_observed = lfm_baja_02_observed,
lfm_baja_02_WH = lfm_baja_02_wh,
lfm_baja_02_Splines = lfm_baja_02_splines,
lfm_totales_02_observed = lfm_totales_02_observed,
lfm_totales_02_WH = lfm_totales_02_wh,
lfm_totales_02_Splines = lfm_totales_02_splines,
# 2017 - Hombres
lfh_alta_17_observed = lfh_alta_17_observed,
lfh_alta_17_WH = lfh_alta_17_wh,
lfh_alta_17_Splines = lfh_alta_17_splines,
lfh_media_17_observed = lfh_media_17_observed,
lfh_media_17_WH = lfh_media_17_wh,
lfh_media_17_Splines = lfh_media_17_splines,
lfh_baja_17_observed = lfh_baja_17_observed,
lfh_baja_17_WH = lfh_baja_17_wh,
lfh_baja_17_Splines = lfh_baja_17_splines,
lfh_totales_17_observed = lfh_totales_17_observed,
lfh_totales_17_WH = lfh_totales_17_wh,
lfh_totales_17_Splines = lfh_totales_17_splines,
# 2017 - Mujeres
lfm_alta_17_observed = lfm_alta_17_observed,
lfm_alta_17_WH = lfm_alta_17_wh,
lfm_alta_17_Splines = lfm_alta_17_splines,
lfm_media_17_observed = lfm_media_17_observed,
lfm_media_17_WH = lfm_media_17_wh,
lfm_media_17_Splines = lfm_media_17_splines,
lfm_baja_17_observed = lfm_baja_17_observed,
lfm_baja_17_WH = lfm_baja_17_wh,
lfm_baja_17_Splines = lfm_baja_17_splines,
lfm_totales_17_observed = lfm_totales_17_observed,
lfm_totales_17_WH = lfm_totales_17_wh,
lfm_totales_17_Splines = lfm_totales_17_splines
)
} # Lista de informacion de las tablas de vida
# Apply the function to your data
plot_life_expectancy_comparison(life_table_data, "h", "92")
plot_life_expectancy_comparison(life_table_data, "m", "92")
plot_life_expectancy_comparison(life_table_data, "h", "02")
plot_life_expectancy_comparison(life_table_data, "m", "02")
plot_life_expectancy_comparison(life_table_data, "h", "17")
plot_life_expectancy_comparison(life_table_data, "m", "17")
# Apply the function to your data
plot_method_comparison(life_table_data, "h", "92")
plot_method_comparison(life_table_data, "m", "92")
plot_method_comparison(life_table_data, "h", "02")
plot_method_comparison(life_table_data, "m", "02")
plot_method_comparison(life_table_data, "h", "17")
plot_method_comparison(life_table_data, "m", "17")
}
# Plots de qxs
{
plot_qx_comparison(life_table_data, "h", "92")
plot_qx_comparison(life_table_data, "m", "92")
plot_qx_comparison(life_table_data, "h", "02")
plot_qx_comparison(life_table_data, "m", "02")
plot_qx_comparison(life_table_data, "h", "17")
plot_qx_comparison(life_table_data, "m", "17")
}
# Guardar los csv y imagenes
{ #csvs
save_life_tables_to_csv(life_table_data, "h", "92")
save_life_tables_to_csv(life_table_data, "m", "92")
save_life_tables_to_csv(life_table_data, "h", "02")
save_life_tables_to_csv(life_table_data, "m", "02")
save_life_tables_to_csv(life_table_data, "h", "17")
save_life_tables_to_csv(life_table_data, "m", "17")
# tablas, salio pesimo
#save_life_tables_as_images(life_table_data, "h", "92")
#save_life_tables_as_images(life_table_data, "m", "92")
#save_life_tables_as_images(life_table_data, "h", "02")
#save_life_tables_as_images(life_table_data, "m", "02")
#save_life_tables_as_images(life_table_data, "h", "17")
#save_life_tables_as_images(life_table_data, "m", "17")
}
